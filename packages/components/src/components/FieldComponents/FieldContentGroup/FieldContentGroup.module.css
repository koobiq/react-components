@import url('../../../styles/mixins.css');

.base {
  --field-content-border-color: ;
  --field-content-outline-width: 2px;
  --field-content-outline-color: transparent;
  --field-content-border-radius: var(--kbq-size-s);
  --field-content-border-width: var(--kbq-size-border-width);
  --field-input-padding-inline-start: var(
    --field-control-start-addon-inline-size,
    var(--kbq-size-m)
  );
  --field-input-padding-inline-end: var(
    --field-control-end-addon-inline-size,
    var(--kbq-size-m)
  );
  --field-input-padding-block-start: var(--kbq-size-xs);
  --field-input-padding-block-end: var(--kbq-size-xs);
  display: flex;
  inline-size: 100%;
  position: relative;
  border-radius: var(--field-content-border-radius);

  & > * {
    @mixin typography text-normal;
  }

  /* border */
  &::before {
    inset: 0;
    content: '';
    position: absolute;
    pointer-events: none;
    border-radius: inherit;
    z-index: var(--kbq-layer-absolute);
    transition: border-color var(--kbq-transition-default);
    border: var(--field-content-border-width) solid
      var(--field-content-border-color, transparent);
  }

  /* focus-visible */
  &::after {
    inset: 0;
    content: '';
    position: absolute;
    pointer-events: none;
    border-radius: inherit;
    z-index: var(--kbq-layer-absolute);
    transition: outline-color var(--kbq-transition-default);
    outline-offset: calc(-1 * var(--field-content-outline-width) / 2);
    outline: var(--field-content-outline-width) solid
      var(--field-content-outline-color);
  }
}

.hasStartAddon {
  --field-control-start-addon-inline-size: 36px;
}

.hasEndAddon {
  --field-control-end-addon-inline-size: 36px;
}

.transparent {
  --field-content-border-color: transparent;
}

.filled {
  --field-content-border-color: var(--kbq-line-contrast-fade);

  &:focus-within {
    --field-content-outline-color: var(--kbq-states-line-focus-theme);
  }
}

.filled:where(.invalid) {
  --field-content-border-color: var(--kbq-line-error);

  &:focus-within {
    --field-content-outline-color: var(--field-content-border-color);
  }
}

.transparent:where(.invalid) {
  --field-content-border-color: transparent;
}

.filled:where(.disabled) {
  --field-content-border-color: var(--kbq-states-line-disabled);
}
